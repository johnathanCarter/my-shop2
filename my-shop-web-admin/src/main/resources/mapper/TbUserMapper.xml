<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybtis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.my.shop.web.admin.dao.TbUserDao">
    <sql id="tbUserColumns">
        a.id,
        a.username,
        a.password,
        a.phone,
        a.email,
        a.created,
        a.updated
    </sql>

    <select id="selectAll" resultType="TbUser">
        SELECT
        <include refid="tbUserColumns"/>
        FROM tb_user AS a
    </select>

    <select id="login" resultType="TbUser">
        SELECT a.username,
               a.password,
               a.email
        FROM tb_user AS a
        WHERE email = #{email}
    </select>

<!--    <insert id="register">-->
<!--        INSERT INTO tb_user(-->
<!--            username,-->
<!--            password,-->
<!--            phone,-->
<!--            email)-->
<!--        VALUES (-->
<!--            #{username},-->
<!--            #{password},-->
<!--            #{phone},-->
<!--            #{email})-->
<!--    </insert>-->

    <delete id="multiDelete">
        delete from tb_user
            WHERE id IN
        <foreach collection="array" item="id" open="(" close=")" separator=",">
                  #{id}
        </foreach>
    </delete>

    <select id="selectById" resultType="TbUser">
        select
            <include refid="tbUserColumns"/>
        from tb_user
            WHERE id = #{id}
    </select>

    <insert id="insert">
        insert into tb_user
            set
            username = #{username},
            password = #{password},
            phone = #{phone},
            email = #{email},
            updated = #{updated}
    </insert>

    <delete id="delete">
        delete from tb_user
            where id = #{id}
    </delete>

    <update id="update">
        update tb_user
            set
            username = #{username},
            phone = #{phone},
            email = #{email},
            updated = #{updated}
            where id = #{id}
    </update>
    
<!--    <select id="search" resultType="TbUser">-->
<!--        select-->
<!--            <include refid="tbUserColumns"/>-->
<!--        from tb_user-->
<!--            as a-->
<!--            <where>-->
<!--                <if test="username != null and username != ''">-->
<!--                    and a.username like concat ('%', #{username}, '%')-->
<!--                </if>-->
<!--                <if test="phone != null and phone != ''">-->
<!--                    and a.phone like concat ('%', #{phone}, '%')-->
<!--                </if>-->
<!--                <if test="email != null and email != ''">-->
<!--                    and a.email like concat('%', #{email}, '%')-->
<!--                </if>-->
<!--            </where>-->
<!--    </select>-->

    <select id="page" resultType="TbUser" parameterType="java.util.Map">
        select
            <include refid="tbUserColumns"/>
        from tb_user as a
        <where>
            <if test="tbUser.username != null and tbUser.username != ''">
                and a.username like concat ('%', #{tbUser.username}, '%')
            </if>
            <if test="tbUser.phone != null and tbUser.phone != ''">
                and a.phone like concat('%', #{tbUser.phone}, '%')
            </if>
            <if test="tbUser.email != null and tbUser.email != ''">
                and a.email like concat('%', #{tbUser.email}, '%')
            </if>
        </where>
            limit #{start}, #{length}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*)
            from tb_user as a
        <where>
            <if test="username != null and username != ''">
                and a.username like concat ('%', #{username}, '%')
            </if>
            <if test="phone != null and phone != ''">
                and a.phone like concat('%', #{phone}, '%')
            </if>
            <if test="email != null and email != ''">
                and a.email like concat('%', #{email}, '%')
            </if>
        </where>
    </select>
</mapper>